{"version":3,"file":"js/app.904b72b6.js","mappings":"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","sources":["webpack://ultimate-tic-tac-toe/./src/App.vue","webpack://ultimate-tic-tac-toe/./src/views/GameView.vue","webpack://ultimate-tic-tac-toe/./src/components/MainField.vue","webpack://ultimate-tic-tac-toe/./src/components/SubField/SubField.vue","webpack://ultimate-tic-tac-toe/./src/stores/store.js","webpack://ultimate-tic-tac-toe/./src/components/Cell/Cell.vue","webpack://ultimate-tic-tac-toe/./src/components/Cell/CellSign.vue","webpack://ultimate-tic-tac-toe/./src/components/Cell/CellSign.vue?ba91","webpack://ultimate-tic-tac-toe/./src/components/Cell/Cell.vue?7afb","webpack://ultimate-tic-tac-toe/./src/components/SubField/SubFieldWinSign.vue","webpack://ultimate-tic-tac-toe/./src/components/SubField/SubFieldWinSign.vue?cc9b","webpack://ultimate-tic-tac-toe/./src/components/SubField/SubField.vue?7fa5","webpack://ultimate-tic-tac-toe/./src/components/MainField.vue?16d9","webpack://ultimate-tic-tac-toe/./src/components/GameStatus/GameStatus.vue","webpack://ultimate-tic-tac-toe/./src/components/GameStatus/GameStatusSign.vue","webpack://ultimate-tic-tac-toe/./src/components/GameStatus/GameStatusSign.vue?c406","webpack://ultimate-tic-tac-toe/./src/components/GameStatus/GameStatus.vue?4cf4","webpack://ultimate-tic-tac-toe/./src/views/GameView.vue?3e8c","webpack://ultimate-tic-tac-toe/./src/views/HeaderView.vue","webpack://ultimate-tic-tac-toe/./src/views/HeaderView.vue?d554","webpack://ultimate-tic-tac-toe/./src/App.vue?7ccd","webpack://ultimate-tic-tac-toe/./src/router/index.js","webpack://ultimate-tic-tac-toe/./src/main.js","webpack://ultimate-tic-tac-toe/webpack/bootstrap","webpack://ultimate-tic-tac-toe/webpack/runtime/chunk loaded","webpack://ultimate-tic-tac-toe/webpack/runtime/define property getters","webpack://ultimate-tic-tac-toe/webpack/runtime/global","webpack://ultimate-tic-tac-toe/webpack/runtime/hasOwnProperty shorthand","webpack://ultimate-tic-tac-toe/webpack/runtime/jsonp chunk loading","webpack://ultimate-tic-tac-toe/webpack/startup"],"sourcesContent":["<template>\n  <div class=\"main_app\">\n    <HeaderView/>\n    <GameView/>\n  </div>\n</template>\n\n<script>\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\nimport '@/assets/base.css';\nimport GameView from \"@/views/GameView.vue\";\nimport HeaderView from \"@/views/HeaderView.vue\";\n\nexport default {\n  components: {HeaderView, GameView},\n}\n</script>\n\n<style scoped>\n.main_app {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n</style>\n","<template>\n  <div class=\"game\">\n    <GameStatus/>\n    <MainField/>\n  </div>\n\n</template>\n\n<script>\nimport MainField from \"@/components/MainField.vue\";\nimport GameStatus from \"@/components/GameStatus/GameStatus.vue\";\nimport {store} from \"@/stores/store.js\";\n\nexport default {\n  components: {MainField, GameStatus},\n  mounted() {\n    store.setFieldSize()\n  }\n}\n</script>\n<style scoped>\n.game {\n  margin: 10rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n</style>","<template>\n  <div :style=\"mainFieldStyle\">\n    <SubField\n        v-for=\"(cell, index) in field\"\n        :key=\"index\"\n        :index=\"index\"\n    />\n  </div>\n</template>\n\n<script>\nimport SubField from \"@/components/SubField/SubField.vue\";\nimport {store} from \"@/stores/store.js\";\n\nexport default {\n  components: {SubField},\n  data() {\n    return {}\n  },\n  computed: {\n    field() {\n      return store?.getSingleField()\n    },\n    mainFieldStyle() {\n      return {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${store.getFieldSize()}, 2fr)`\n      };\n    },\n  },\n}\n</script>\n\n<style scoped>\n</style>\n","<template>\n  <div\n      class=\"subfield\"\n      :class=\"subfieldClasses\"\n      :style=\"subfieldStyle\"\n  >\n    <TransitionGroup>\n      <div\n          class=\"subfield_overlay\"\n          :style=\"overlayStyle\"\n          v-if=\"isWin\"\n      />\n      <div\n          class=\"subfield_overlay_sign\"\n          v-if=\"isWin\"\n      >\n        <SubFieldWinSign\n            :sign=\"subfield.sign\"\n            :subFieldIndex=\"index\"\n        />\n      </div>\n    </TransitionGroup>\n    <Cell\n        v-for=\"(cell, index) in subfield?.field\"\n        :key=\"index\"\n        :subFieldIndex=\"index\"\n        :mainFieldIndex=\"this.index\"\n        :isActiveSubField=\"isActiveSubField\"\n    />\n  </div>\n</template>\n\n<script>\nimport {store} from \"@/stores/store.js\";\nimport Cell from \"@/components/Cell/Cell.vue\";\nimport SubFieldWinSign from \"@/components/SubField/SubFieldWinSign.vue\";\n\nexport default {\n  components: {Cell, SubFieldWinSign},\n  data() {\n    return {}\n  },\n  props: ['index'],\n  computed: {\n    subfield() {\n      return store?.getSingleField(this.index)\n    },\n    isActiveSubField() {\n      return store.getActiveMainFieldIndexes().includes(this.index)\n    },\n    isWin() {\n      return this.subfield.sign !== null\n    },\n    getBorderColor() {\n      return store.botDifficultyEnum?.[store.getBotDifficulty()].style.color\n    },\n    subfieldClasses() {\n      return {\n        subfield_nonactive: store.isWinnerExist(),\n        subfield_active: this.isActiveSubField\n      }\n    },\n    subfieldStyle() {\n      return {\n        display: 'grid',\n        padding: '8px',\n        gridTemplateColumns: `repeat(${store.getFieldSize()}, 2fr)`,\n        borderTop: (this.index + 1) > store.getFieldSize() ? `solid 10px ${this.getBorderColor}` : '',\n        borderRight: (this.index + 1) % store.getFieldSize() !== 0 ? `solid 10px ${this.getBorderColor}` : '',\n      }\n    },\n    overlayStyle() {\n      return {\n        backgroundColor: store.signEnums?.[this.subfield.sign]?.mainFieldStyle?.backgroundColor,\n      }\n    },\n  }\n}\n</script>\n\n<style scoped>\n.subfield {\n  position: relative;\n}\n\n.subfield_active:not(.subfield_nonactive) .cell:not(.signed,.blocked) {\n  transition: background-color 0.5s ease;\n  background-color: #b6b4b4;\n  cursor: pointer;\n}\n\n.subfield_overlay {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n.subfield_overlay_sign {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.v-enter-active,\n.v-leave-active {\n  transition: opacity 0.5s ease;\n}\n\n.v-enter-from,\n.v-leave-to {\n  opacity: 0;\n}\n\n</style>\n","import {reactive} from 'vue'\n\nexport const store = reactive({\n    fieldSize: 3,\n    winner: null,\n    singleField: [],\n    currentSign: 'cross',\n    lastMoveIndex: null,\n    hoveredIndexes: [],\n\n    botDifficulty: 'none',\n    isBotMotion: false,\n    botMotionTimeout: null,\n\n    signEnums: {\n        cross: {\n            mainFieldSvg: {\n                path: 'M412.861,78.976c3.404-6.636,2.831-14.159-0.15-20.404c0.84-7.106-1.02-14.321-7.746-19.855 c-6.262-5.151-12.523-10.305-18.781-15.457c-11.005-9.055-28.237-11.913-38.941,0c-48.619,54.103-99.461,105.856-152.167,155.725 c-39.185-36.605-78.846-72.713-118.223-108.868c-13.82-12.693-33.824-8.71-42.519,6.411c-12.665,6.286-22.931,14.481-31.42,28.468 c-4.042,6.664-3.727,15.076,0,21.764c25.421,45.578,74.557,85.651,114.957,122.529c-5.406,4.839-10.772,9.724-16.287,14.461 c-54.43,46.742-91.144,76.399-23.029,124.325c0.919,0.647,1.856,0.504,2.789,0.882c1.305,0.602,2.557,1.026,4.004,1.264 c0.45,0.017,0.87,0.093,1.313,0.058c1.402,0.114,2.774,0.471,4.195,0.192c36.621-7.18,70.677-35.878,101.576-67.48 c30.1,29.669,62.151,58.013,97.395,74.831c8.391,4.005,18.395,1.671,24.855-3.931c10.832,0.818,20.708-5.913,25.665-15.586 c0.734-0.454,1.207-0.713,2.002-1.21c15.748-9.838,17.187-29.431,5.534-42.936c-26.313-30.492-54.284-59.478-82.798-87.95 C316.426,196.043,380.533,141.939,412.861,78.976z',\n                viewVox: '0 15 415 400',\n            },\n            mainFieldStyle: {\n                backgroundColor: 'rgba(131,13,13,0.5)',\n            },\n            color: '#bf1919',\n            word: 'cross',\n        },\n        circle: {\n            mainFieldSvg: {\n                path: 'M79.204,179.279c1.62,0.59,3.245,1.181,4.874,1.774l1.226,0.434l1.256,0.342l2.524,0.662 c3.351,0.987,6.826,1.413,10.289,1.954c1.736,0.2,3.487,0.254,5.236,0.368l2.627,0.135c0.883,0.014,1.776-0.019,2.665-0.033 c1.805-0.006,3.489-0.185,5.229-0.304c1.704-0.174,3.391-0.383,5.067-0.63c6.661-1.053,13.085-2.81,19.289-5.286 c6.194-2.479,12.167-5.7,17.66-9.757c5.486-4.047,10.476-8.965,14.499-14.561c4.023-5.585,7.074-11.805,8.88-18.077 c0.521-1.891,1.084-3.938,1.678-6.093c0.464-2.151,0.999-4.418,1.434-6.737c0.166-1.158,0.335-2.331,0.505-3.512 c0.16-1.182,0.361-2.386,0.4-3.558c0.066-1.182,0.133-2.367,0.199-3.548l0.078-1.772c-0.003-0.58-0.028-1.15-0.045-1.723 c-0.039-1.144-0.09-2.279-0.154-3.397c-0.036-0.559-0.071-1.114-0.107-1.665c-0.051-0.544-0.141-1.065-0.215-1.591 c-0.323-2.087-0.665-4.104-1.137-5.927c-0.539-1.783-1.134-3.418-1.795-4.846c-0.336-0.711-0.665-1.384-1.052-1.972 c-0.398-0.581-0.811-1.105-1.24-1.566c0.673,2.109,1.082,4.388,1.586,6.601c0.538,2.196,0.836,4.52,1.162,6.822 c-2.191-6.781-3.963-13.099-5.761-19.457c-1.019-3.085-1.867-6.301-3.117-9.246c-0.592-1.498-1.207-2.988-1.86-4.46 c-0.662-1.464-1.451-2.835-2.242-4.219c-1.631,0.802-2.454,1.18-5.099-2.126c0.917,1.858,1.998,3.924,3.147,6.104 c0.597,1.074,1.113,2.249,1.661,3.421c0.54,1.178,1.086,2.37,1.632,3.563c2.097,4.825,3.823,9.908,4.509,14.197l-2.625,0.719 c-1.534-3.935-2.98-8.899-4.721-13.757c-0.456-1.203-0.912-2.405-1.362-3.593c-0.461-1.183-0.899-2.367-1.444-3.446 c-1.043-2.189-2.11-4.228-3.213-5.953c-0.808,0.419-2.42,1.256-3.226,1.675c-0.764,0.388-2.71-3.05-4.617-6.513 c0.949,1.734,2.419,4.31,3.813,6.933c1.312,2.672,2.623,5.344,3.497,7.123c-0.825,0.378-2.476,1.136-3.3,1.514 c-0.817,0.37-2.526-3.079-4.228-6.546c-1.585,0.8-5.022-1.647-4.028,2.092c1.638,3.373,3.388,6.699,4.766,10.152 c-1.597-3.361-3.534-6.078-5.285-8.313c-0.443-0.557-0.869-1.086-1.307-1.577c-0.458-0.484-0.908-0.937-1.347-1.361 c-0.88-0.847-1.721-1.575-2.516-2.189c-3.134-2.473-5.72-3.056-6.874-2.362c0.673,0.659,1.032,1.242,1.233,1.784 c0.182,0.548,0.197,1.057,0.219,1.562c0.041,1.012,0.074,2.011,1.339,3.354c-1.663-1.837-3.456-3.592-5.132-5.075 c1.403-0.68,2.834-1.343,1.929-3.426c-0.238-0.543-0.675-1.124-1.265-1.733c-0.589-0.612-1.403-1.117-2.289-1.697 c-0.897-0.556-1.887-1.155-2.957-1.69c-1.1-0.466-2.256-0.927-3.416-1.381c-0.581-0.223-1.159-0.461-1.74-0.668 c-0.594-0.167-1.182-0.333-1.759-0.496c-1.154-0.328-2.263-0.653-3.278-0.979c-2.056-0.527-3.766-0.959-4.709-1.579 c-1.472-0.501-2.482-0.69-3.058-0.934c-0.578-0.228-0.73-0.421-0.526-0.581c0.405-0.301,2.252-0.603,4.872-0.355 c0.657,0.05,1.363,0.105,2.108,0.162c0.744,0.073,1.537,0.108,2.331,0.299c1.599,0.318,3.313,0.686,5.058,1.083 c1.701,0.535,3.424,1.133,5.099,1.717c0.851,0.26,1.617,0.69,2.395,1.034c0.769,0.366,1.517,0.723,2.235,1.065 c-0.75-0.867-0.658-1.074-0.061-0.912c0.298,0.081,0.719,0.253,1.217,0.48c0.248,0.115,0.519,0.236,0.797,0.379 c0.268,0.16,0.549,0.329,0.837,0.502c2.308,1.383,5.052,3.066,5.528,2.399c0.518-0.745,1.041-1.488,1.321-2.393 c0.139-0.452,0.218-0.946,0.2-1.501c-0.032-0.535-0.166-1.125-0.438-1.793c-0.553-1.322-1.634-3.002-3.663-5.046 c-2.118-1.88-5.095-4.337-9.686-6.582c-2.233-1.285-1.994-2.154-1.068-2.913c0.918-0.76,2.545-1.382,2.846-2.237 c-0.966-0.326-1.909-0.729-2.901-0.978l-2.97-0.784c-1.989-0.496-3.969-1.068-6.012-1.327c-2.031-0.314-4.07-0.648-6.117-0.883 c-2.052-0.13-4.113-0.237-6.177-0.322c-8.244-0.09-16.618,0.973-24.674,3.447c-16.025,5.079-30.572,15.305-40.214,29.168 c-4.855,6.876-8.654,14.514-11.03,22.567c-2.325,8.069-3.286,16.428-2.995,24.62c0.738,16.404,6.951,32.352,17.123,44.118 C55.427,165.674,66.455,174.006,79.204,179.279z M73.036,108.653l0.016-0.996c0.002-0.333-0.013-0.668,0.059-0.99 c0.328-2.611,0.728-5.232,1.629-7.714c0.215-0.623,0.419-1.251,0.613-1.885c0.286-0.596,0.57-1.194,0.839-1.799 c0.46-1.252,1.224-2.35,1.859-3.522c0.288-0.606,0.704-1.132,1.099-1.67c0.391-0.541,0.773-1.09,1.147-1.648 c0.418-0.523,0.889-1.002,1.318-1.517l0.65-0.77l0.321-0.39l0.371-0.34c3.79-3.813,8.419-6.79,13.48-8.623 c0.305-0.149,0.629-0.242,0.958-0.317l0.975-0.265l1.944-0.569c0.67-0.1,1.337-0.212,2.004-0.335 c0.671-0.095,1.323-0.327,2.014-0.314c2.715-0.234,5.492-0.334,8.195,0.043c5.411,0.635,10.676,2.472,15.338,5.438 c7.339,4.819,12.976,12.312,15.379,20.807c0.44,2.035,0.785,4.03,1.001,5.958c0.047,0.371,0.113,0.747,0.15,1.112l0.04,1.065 l0.119,2.125c0.05,0.709-0.047,1.348-0.047,2.024l-0.022,1.001c0.003,0.338-0.004,0.669-0.064,0.973 c-0.188,1.24-0.228,2.535-0.552,3.659l-0.173,0.876c-0.043,0.299-0.106,0.586-0.213,0.848c-0.181,0.541-0.346,1.085-0.495,1.636 c-0.796,2.094-1.685,4.078-2.952,5.909c-1.289,1.819-2.818,3.567-4.652,5.224c-1.863,1.638-4.068,3.142-6.477,4.505 c-0.625,0.317-1.197,0.699-1.855,0.987l-1.935,0.92l-2.019,0.822c-0.671,0.281-1.385,0.484-2.071,0.742 c-2.786,0.935-5.697,1.647-8.497,2.065c-0.694,0.091-1.404,0.225-2.061,0.258c-0.666,0.055-1.353,0.147-1.952,0.142l-0.93,0.042 c-0.311,0.013-0.641-0.036-0.961-0.046c-0.644-0.037-1.288-0.062-1.934-0.075c-5.145-0.276-10.105-1.885-14.56-4.473 l-1.676-0.969c-0.513-0.395-1.033-0.779-1.561-1.154c-1.116-0.677-1.986-1.661-3.003-2.472c-0.532-0.386-0.911-0.925-1.368-1.386 l-1.354-1.409c-0.383-0.526-0.776-1.044-1.179-1.555c-0.395-0.516-0.852-0.993-1.152-1.573 c-2.879-4.336-4.789-9.267-5.537-14.465c-0.03-0.161-0.071-0.321-0.093-0.484l-0.023-0.496l-0.058-0.99 c-0.045-0.66-0.102-1.32-0.17-1.982L73.036,108.653z',\n                viewVox: '33 30 150 160',\n            },\n            mainFieldStyle: {\n                backgroundColor: 'rgba(14,83,136,0.5)',\n            },\n            color: '#167dd1',\n            word: 'circle',\n        },\n        draw: {\n            mainFieldSvg: {\n                path: 'M394,154.174c-5.331-5.33-11.806-7.995-19.417-7.995H27.406c-7.611,0-14.084,2.665-19.414,7.995 C2.662,159.503,0,165.972,0,173.587v54.82c0,7.617,2.662,14.086,7.992,19.41c5.33,5.332,11.803,7.994,19.414,7.994h347.176 c7.611,0,14.086-2.662,19.417-7.994c5.325-5.324,7.991-11.793,7.991-19.41v-54.82C401.991,165.972,399.332,159.5,394,154.174z',\n                viewVox: '0 0 400 400',\n            },\n            mainFieldStyle: {\n                backgroundColor: 'rgba(163,163,19,0.7)',\n            },\n            color: '#dfc31d',\n            word: 'draw',\n        },\n    },\n    winEnum: {\n        win: 'win',\n        draw: 'draw',\n        nothing: 'nothing'\n    },\n    botDifficultyEnum: {\n        none: {\n            nextDifficulty: 'light',\n            word: 'none',\n            style: {\n                color: '#2ebacc',\n            },\n        },\n        light: {\n            nextDifficulty: 'medium',\n            word: 'light',\n            style: {\n                color: '#2ecc71',\n            },\n        },\n        medium: {\n            nextDifficulty: 'none',\n            word: 'medium',\n            style: {\n                color: '#cca72e',\n            },\n        },\n    },\n\n    // Геттеры\n    getCurrentSign() {\n        return this.currentSign\n    },\n    getSvgPathBySign(sign) {\n        return this.signEnums?.[sign]?.mainFieldSvg?.path ?? ''\n    },\n    getSvgViewBoxBySign(sign) {\n        return this.signEnums?.[sign]?.mainFieldSvg?.viewVox ?? ''\n    },\n    getDefaultColorBySign(sign) {\n        return this.signEnums?.[sign]?.color ?? ''\n    },\n    getWinner() {\n        return this.winner\n    },\n    getFieldSize() {\n        return this.fieldSize\n    },\n    getWinIndexes() {\n        const field = this.getSingleField()\n        return Object.keys(field).filter(key => field[key].isWinIndex)\n    },\n    getLastMoveIndex() {\n        return this.lastMoveIndex\n    },\n    getHoveredIndexes() {\n        return this.hoveredIndexes\n    },\n    getBotDifficulty() {\n        return this.botDifficulty\n    },\n    getIsBotMotion() {\n        return this.isBotMotion\n    },\n    getMainFieldInSingleField() {\n        return Object.values(this.getSingleField()).map(item => item.sign !== null ? item.sign : [])\n    },\n    getActiveMainFieldIndexes(lastMoveIndex = this.getLastMoveIndex()) {\n        const activeCells = this.getIndexesByEmptyCondition()\n        return activeCells.includes(lastMoveIndex) ? [lastMoveIndex] : activeCells\n    },\n    getSingleField(mainIndex = null, subIndex = null) {\n        return mainIndex === null ? this.singleField : subIndex === null ? this.singleField?.[mainIndex] : this.singleField?.[mainIndex]?.field?.[subIndex]\n    },\n\n    // Сеттеры\n    setWinner(value) {\n        this.winner = value\n    },\n    setFieldSize(val = this.getFieldSize()) {\n        this.fieldSize = val\n        this.restart()\n    },\n    setLastMoveIndex(val) {\n        this.lastMoveIndex = val\n    },\n    setIsBotMotion(val) {\n        this.isBotMotion = val\n    },\n    setWinIndexes(obj, sign) {\n        for (const key in obj) {\n            if (obj[key] === sign && key in this.getSingleField()) {\n                this.singleField[key].isWinIndex = true\n            }\n        }\n    },\n    setHoveredIndexes(index = null, isHovered = false) {\n        this.hoveredIndexes = isHovered ? this.getActiveMainFieldIndexes(index) : []\n    },\n    fillSingleField() {\n        this.singleField = []\n        const dimension = Math.pow(this.getFieldSize(), 2)\n        for (let i = 0; i < dimension; i++) {\n            this.singleField[i] = {}\n            this.singleField[i].field = Array(dimension).fill([])\n            this.singleField[i].sign = null\n            this.singleField[i].isWinIndex = false\n        }\n    },\n    swapCurrentSign() {\n        this.currentSign = this.getCurrentSign() === this.signEnums.cross.word\n            ? this.signEnums.circle.word\n            : this.signEnums.cross.word\n    },\n    swapBotGame() {\n        this.botDifficulty = this.botDifficultyEnum?.[this.botDifficulty].nextDifficulty\n        this.restart()\n    },\n    setSignToSingleField(mainIndex, subIndex = null, value = this.getCurrentSign()) {\n        const isMainField = subIndex === null\n        if (isMainField && this.getSingleField(mainIndex).sign !== null) return;\n        if (!isMainField && !Array.isArray(this.getSingleField(mainIndex, subIndex))) return;\n\n        if (isMainField) {\n            this.singleField[mainIndex].sign = value\n        } else {\n            this.singleField[mainIndex].field[subIndex] = value\n        }\n\n        this.checkWinInSingleField(isMainField, mainIndex, subIndex, value)\n    },\n    moveInField(mainIndex, subIndex) {\n        this.setSignToSingleField(mainIndex, subIndex)\n        this.swapCurrentSign()\n        this.setLastMoveIndex(subIndex)\n        this.setHoveredIndexes()\n    },\n\n    restart() {\n        this.currentSign = this.signEnums.cross.word\n        this.winner = null\n        this.lastMoveIndex = null\n        this.hoveredIndexes = []\n        this.isBotMotion = false\n        this.fillSingleField()\n        clearTimeout(this.botMotionTimeout)\n        this.botMotionTimeout = null\n    },\n\n    // Чекеры\n    isWinnerExist() {\n        return this.getWinner() !== null\n    },\n    isGameWithBot() {\n        return this.getBotDifficulty() !== this.botDifficultyEnum.none.word\n    },\n\n    // Хелперы\n    getMaxNumberSignsForWin() {\n        return Math.min(5, this.getFieldSize())\n    },\n    getRandomArrValueWithExcluding(array, exclude) {\n        const availableNumbers = array.filter(num => !exclude.includes(num))\n\n        if (availableNumbers.length === 0) {\n            return null\n        }\n\n        const randomIndex = Math.floor(Math.random() * availableNumbers.length)\n        return availableNumbers[randomIndex]\n    },\n    getIndexesByEmptyCondition(isEmpty = true, obj = this.getMainFieldInSingleField()) {\n        return obj\n            .map((value, index) => (isEmpty ? Array.isArray(value) : !Array.isArray(value)) ? index : -1)\n            .filter(index => index !== -1)\n    },\n    getDeepClonedObj(obj) {\n        return JSON.parse(JSON.stringify(obj))\n    },\n\n    // Алгоритм для победы\n    checkWinOrDraw(matrix, changedIndex, findSign, isDrawOnly = false, needSetWinIndexes = false) {\n        if (!isDrawOnly) {\n            const isWin = this.checkWin(matrix, changedIndex, findSign, needSetWinIndexes)\n            if (isWin) return this.winEnum.win\n        }\n        const isDraw = !matrix.some(cell => cell.length === 0)\n        return isDraw ? this.winEnum.draw : this.winEnum.nothing\n    },\n    checkWin(matrix, changedIndex, findSign, needSetWinIndexes = false) {\n        const fieldSize = this.getFieldSize()\n        const changedIndexY = Math.floor(changedIndex / fieldSize)\n        const changedIndexX = changedIndex - changedIndexY * fieldSize\n        return (\n            this.checkWinByLine(matrix, changedIndexX, changedIndexY, findSign, true, needSetWinIndexes)\n            || this.checkWinByLine(matrix, changedIndexX, changedIndexY, findSign, false, needSetWinIndexes)\n            || this.checkWinByDiagonal(matrix, changedIndexX, changedIndexY, findSign, true, needSetWinIndexes)\n            || this.checkWinByDiagonal(matrix, changedIndexX, changedIndexY, findSign, false, needSetWinIndexes)\n        )\n    },\n    checkWinByLine(matrix, x, y, findSign, isHorizontal = true, needSetWinIndexes = false, fieldSize = this.getFieldSize()) {\n        const startIndex = isHorizontal\n            ? Math.max(x - this.getMaxNumberSignsForWin() + 1, 0)\n            : Math.max(y - this.getMaxNumberSignsForWin() + 1, 0)\n        const endIndex = isHorizontal\n            ? Math.min(this.getMaxNumberSignsForWin() + x - 1, fieldSize - 1)\n            : Math.min(this.getMaxNumberSignsForWin() + y - 1, fieldSize - 1)\n        let stack = {}\n        for (let i = startIndex; i <= endIndex; i++) {\n            const matrixIndex = isHorizontal\n                ? y * fieldSize + i\n                : i * fieldSize + x\n            stack[`${matrixIndex}`] = matrix[matrixIndex]\n        }\n\n        const result = this.checkRowBySign(stack, findSign, this.getMaxNumberSignsForWin())\n        if (result && needSetWinIndexes) this.setWinIndexes(stack, findSign)\n\n        return result\n    },\n    checkWinByDiagonal(matrix, x, y, findSign, isDownUpDiagonal = true, needSetWinIndexes = false, fieldSize = this.getFieldSize()) {\n        const diagonalLen = this.getDiagonalLen(x, y, isDownUpDiagonal)\n        if (diagonalLen < this.getMaxNumberSignsForWin()) return false\n\n        let stack = {}\n        for (let i = 0; i < diagonalLen; i++) {\n            const bottomIndexX = isDownUpDiagonal ? x - i : x + i\n            const bottomIndexY = y + i\n            const bottomMatrixIndex = bottomIndexX + bottomIndexY * fieldSize\n\n            let setCondition = isDownUpDiagonal ? bottomIndexX >= 0 : x < fieldSize\n            if (\n                setCondition\n                && bottomIndexY < fieldSize\n                && matrix.includes(matrix[bottomMatrixIndex])\n            ) {\n                stack[`${bottomMatrixIndex}`] = matrix[bottomMatrixIndex]\n            }\n\n            const topIndexX = isDownUpDiagonal ? x + i : x - i\n            const topIndexY = y - i\n            const topMatrixIndex = topIndexX + topIndexY * fieldSize\n\n            setCondition = isDownUpDiagonal ? topIndexX < fieldSize : topIndexX >= 0\n\n            if (\n                topIndexY >= 0\n                && setCondition\n                && matrix.includes(matrix[topMatrixIndex])\n            ) {\n                stack[`${topMatrixIndex}`] = matrix[topMatrixIndex]\n            }\n        }\n\n        const result = this.checkRowBySign(stack, findSign, this.getMaxNumberSignsForWin())\n        if (result && needSetWinIndexes) this.setWinIndexes(stack, findSign)\n\n        return result\n    },\n    getDiagonalLen(x, y, isDownUp = true) {\n        return isDownUp\n            ? this.getDownUpDiagonalLen(x, y)\n            : this.getUpDownDiagonalLen(x, y)\n    },\n    getDownUpDiagonalLen(x, y, fieldSize = this.getFieldSize()) {\n        const sum = x + y\n        return (sum < fieldSize)\n            ? sum + 1\n            : fieldSize * 2 - sum - 1\n    },\n    getUpDownDiagonalLen(x, y, fieldSize = this.getFieldSize()) {\n        const min = Math.min(x, y)\n        const max = Math.max(x, y)\n        return fieldSize - max + min\n    },\n    checkRowBySign(obj, sign, count) {\n        let rowCount = 0\n        for (const key in obj) {\n            if (obj[key] === sign) {\n                rowCount++\n                if (rowCount === count) {\n                    return true\n                }\n            } else {\n                rowCount = 0\n            }\n        }\n        return false\n    },\n\n    checkWinInSingleField(isMainField, mainIndex, subIndex, value) {\n        const field = this.getSingleField(mainIndex)\n        const fieldToCheck = isMainField ? this.getMainFieldInSingleField() : field.field\n        const index = isMainField ? mainIndex : subIndex\n        const findSign = isMainField ? field.sign : value\n\n        const drawOnly = findSign === this.signEnums.draw.word && isMainField\n        const winner = this.checkWinOrDraw(fieldToCheck, index, findSign, drawOnly, isMainField)\n\n        if (winner === this.winEnum.nothing) return\n\n        const winSign = winner === this.winEnum.draw ? this.signEnums.draw.word : findSign\n        if (isMainField) {\n            this.setWinner(winSign)\n        } else {\n            this.setSignToSingleField(mainIndex, null, winSign)\n        }\n    },\n\n    // Логика бота\n    botMotion() {\n        const randomIndexes = this.getBotDifficulty() === this.botDifficultyEnum.light.word\n            ? this.getRandomIndexesInSingleField()\n            : this.getBestBotMove()\n\n        if (randomIndexes === null) return\n\n        this.setIsBotMotion(true)\n        this.botMotionTimeout = setTimeout(() => {\n            const [randomMainIndex, randomSubIndex] = randomIndexes\n            this.moveInField(randomMainIndex, randomSubIndex)\n            this.setIsBotMotion(false)\n        }, 500)\n    },\n    getBestBotMove() {\n        const field = this.getSingleField()\n        const activeIndexes = this.getActiveMainFieldIndexes()\n        let clonedField = this.getDeepClonedObj(field)\n\n        for (let mainIndex of activeIndexes) {\n            for (let subIndex = 0; subIndex < Math.pow(this.getFieldSize(), 2); subIndex++) {\n                if (this.isBestBotMoveValid(mainIndex, subIndex, clonedField)) {\n                    return [mainIndex, subIndex]\n                }\n                clonedField = this.getDeepClonedObj(field)\n            }\n        }\n\n        return this.getRandomIndexesInSingleField()\n    },\n    isBestBotMoveValid(mainIndex, subIndex, field) {\n        if (!Array.isArray(field[mainIndex].field[subIndex])) {\n            return false\n        }\n\n        field[mainIndex].field[subIndex] = this.signEnums.circle.word\n        const botWins = this.checkWin(field[mainIndex].field, subIndex, this.signEnums.circle.word)\n        if (botWins) {\n            return true\n        }\n\n        field[mainIndex].field[subIndex] = this.signEnums.cross.word\n        const opponentWins = this.checkWin(field[mainIndex].field, subIndex, this.signEnums.cross.word)\n        return !!opponentWins\n    },\n    getRandomIndexesInSingleField() {\n        const field = this.getSingleField()\n        let stack = {}\n        const activeFieldIndex = this.getActiveMainFieldIndexes()\n        for (let i = 0; i < activeFieldIndex.length; i++) {\n            const randMainIndex = this.getRandomArrValueWithExcluding(activeFieldIndex, Object.keys(stack))\n\n            stack[randMainIndex] = []\n            for (let j = 0; j < field[randMainIndex].field.length; j++) {\n                const randSubIndex = this.getRandomArrValueWithExcluding(\n                    this.getIndexesByEmptyCondition(true, field[randMainIndex].field),\n                    stack[randMainIndex]\n                )\n                const cell = field[randMainIndex].field[randSubIndex]\n                if (Array.isArray(cell)) {\n                    return [randMainIndex, randSubIndex]\n                }\n                stack[randMainIndex].push(randSubIndex)\n            }\n        }\n        return null\n    },\n})","<template>\n  <div\n      class=\"cell\"\n      :class=\"cellClasses\"\n  >\n    <CellSign\n        @mouseover=\"setHovered(true)\"\n        @mouseleave=\"setHovered(false)\"\n        @click=\"setSign\"\n        :cell=\"cell\"\n    />\n  </div>\n</template>\n\n<script>\nimport CellSign from \"@/components/Cell/CellSign.vue\";\nimport {store} from \"@/stores/store.js\";\n\nexport default {\n  components: {CellSign},\n  data() {\n    return {}\n  },\n  props: ['subFieldIndex', 'mainFieldIndex', 'isActiveSubField'],\n  methods: {\n    setSign() {\n      if (store.isWinnerExist() || !this.isActiveSubField || store.getIsBotMotion() || this.isSigned) return\n\n      store.moveInField(this.mainFieldIndex, this.subFieldIndex)\n\n      if (!store.isWinnerExist() && store.isGameWithBot()) {\n        store.botMotion()\n      }\n    },\n    setHovered(val) {\n      if (\n          this.isActiveSubField\n          && !store.getIsBotMotion()\n          && !this.isSigned\n      ) {\n        store.setHoveredIndexes(this.subFieldIndex, val)\n      }\n    }\n  },\n  computed: {\n    cell() {\n      return store?.getSingleField(this.mainFieldIndex, this.subFieldIndex)\n    },\n\n    isSigned() {\n      return !Array.isArray(this.cell)\n    },\n    isBlocked() {\n      return store.isWinnerExist() || !this.isActiveSubField\n    },\n    isExpandAllCell() {\n      return this.isActiveSubField && store.getIndexesByEmptyCondition(false).includes(this.subFieldIndex)\n    },\n    isBotMove() {\n      return store.getIsBotMotion() && this.isActiveSubField\n    },\n    isSubHovered() {\n      return store?.getHoveredIndexes()?.includes(this.mainFieldIndex) && !store.isWinnerExist()\n    },\n\n    cellClasses() {\n      return {\n        signed: this.isSigned,\n        blocked: this.isBlocked,\n        expand_all_cell: this.isExpandAllCell,\n        bot_move: this.isBotMove,\n        sub_hovered: this.isSubHovered,\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.cell {\n  margin: 4px;\n  height: 50px;\n  width: 50px;\n  background-color: rgb(67, 65, 65);\n  border-radius: 5px;\n\n  &:not(.signed,.blocked,.bot_move):hover {\n    background-color: #fff !important;\n    cursor: pointer;\n  }\n}\n\n.bot_move {\n  cursor: default !important;\n}\n\n.expand_all_cell:not(.blocked,.signed) {\n  background-color: #e1cbae !important;\n}\n\n.sub_hovered:not(.signed).blocked {\n  transition: background-color 0.5s;\n  background-color: #554d49 !important;\n}\n\n.sub_hovered:not(.signed,.blocked) {\n  transition: background-color 0.5s;\n  background-color: #e1c4c4 !important;\n}\n</style>\n","<template>\n  <svg viewBox=\"0 0 500 500\">\n    <Transition>\n      <path\n          v-if=\"isSetSign\"\n          :d=\"getRandomPathBySign\"\n          :style=\"getStyle\"\n      />\n    </Transition>\n  </svg>\n</template>\n\n<script>\nimport {store} from \"@/stores/store.js\";\n\nexport default {\n  data() {\n    return {\n      store: null,\n      pathways: {\n        cross: [\n          'M 386.423 94.521 C 393.479 93.278 398.994 97.615 402.079 101.638 C 405.173 105.671 406.547 113.165 404.926 118.717 C 403.071 125.069 396.904 129.794 389.269 137.22 C 377.963 148.218 355.698 163.265 339.454 178.496 C 322.453 194.437 296.931 223.609 289.638 231.158 C 286.94 233.952 288.6 232.384 285.368 235.428 C 283.413 237.27 279.97 240.34 275.477 244.302 C 280.888 252.752 286.189 261.323 291.062 269.587 C 318.074 315.393 374.619 416.063 376.46 437.537 C 377.077 444.732 372.71 445.355 369.343 447.5 C 365.739 449.796 360.229 451.622 355.11 450.347 C 348.6 448.725 342.636 446.203 333.761 434.69 C 314.515 409.726 264.771 287.368 251.209 271.011 C 249.887 269.416 248.871 268.751 247.995 268.476 C 227.326 286.75 203.277 308.416 188.584 323.673 C 165.225 347.928 138.289 384.395 130.228 393.415 C 127.504 396.463 128.695 396.034 125.958 397.685 C 120.422 401.024 100.603 410.988 93.222 410.494 C 88.382 410.171 85.405 406.745 83.259 403.378 C 80.963 399.773 79.558 393.274 80.413 389.145 C 81.211 385.287 83.462 383.435 87.529 379.182 C 94.463 371.929 107.447 364.447 123.112 349.292 C 147.873 325.338 193.245 271.366 226.875 237.031 C 224.294 231.894 221.872 227.559 219.896 225.465 C 216.649 222.024 215.239 224.726 211.357 221.195 C 202.941 213.542 182.683 180.201 171.504 168.533 C 163.884 160.579 155.526 157.174 151.578 152.877 C 149.052 150.127 150.479 148.567 147.308 145.76 C 141.131 140.292 114.787 131.694 108.879 124.411 C 105.086 119.735 105.178 114.307 106.032 110.178 C 106.831 106.32 110.327 102.342 113.149 100.214 C 115.644 98.333 116.992 96.62 121.689 97.368 C 132.081 99.023 169.273 118.884 180.044 127.257 C 186.206 132.047 186.81 137.162 190.007 140.067 C 192.452 142.288 194.868 141.887 197.124 144.337 C 200.186 147.663 202.362 156.681 205.663 159.993 C 208.234 162.573 211.689 162.087 214.203 164.263 C 216.981 166.666 218.732 171.799 221.32 174.226 C 223.534 176.304 224.744 174.622 228.436 178.496 C 233.327 183.628 242.641 195.893 253.405 211.296 C 278.109 188.249 303.543 166.312 316.681 152.877 C 326.495 142.84 326.408 139.409 335.184 131.527 C 347.295 120.65 374.547 96.614 386.423 94.521 Z',\n          'M 93.196 78.083 C 98.395 76.722 110.24 79.709 115.081 82.611 C 118.769 84.822 118.744 88.563 121.873 91.667 C 125.796 95.558 134.102 100.063 137.721 103.742 C 140.38 106.444 141.284 109.634 143.004 111.289 C 144.284 112.52 145.733 112.743 146.777 113.553 C 147.697 114.265 147.924 114.817 149.041 115.817 C 150.854 117.437 155.569 120.62 157.343 122.609 C 158.585 124.001 158.147 124.807 159.607 126.382 C 162.186 129.165 171.367 134.919 173.945 137.702 C 175.405 139.277 174.779 139.821 176.209 141.475 C 178.79 144.46 187.968 151.32 190.548 154.305 C 191.979 155.959 191.285 156.399 192.812 158.078 C 195.746 161.304 207.236 169.191 210.17 172.417 C 211.697 174.096 211.192 174.798 212.434 176.19 C 214.207 178.179 218.644 180.78 220.735 182.982 C 222.445 184.784 222.476 186.042 224.508 188.265 C 226.483 190.425 230.012 193.366 233.605 196.465 C 235.319 193.698 237.282 190.017 240.357 186.756 C 246.58 180.155 263.548 168.742 267.525 164.115 C 269.352 161.989 268.738 160.731 269.789 159.587 C 270.782 158.506 272.517 158.133 273.562 157.323 C 274.482 156.611 274.709 156.059 275.826 155.059 C 277.639 153.439 282.315 149.888 284.127 148.267 C 285.245 147.268 284.662 147.449 286.391 146.003 C 291.889 141.409 326.886 116.44 332.426 111.289 C 334.288 109.557 333.551 109.319 334.69 108.27 C 336.242 106.841 339.931 105.171 341.482 103.742 C 342.622 102.692 341.772 102.421 343.747 100.723 C 349.923 95.413 386.248 68.7 398.083 64.499 C 404.398 62.257 407.959 62.989 411.667 64.499 C 415.164 65.923 418.515 69.186 419.968 72.8 C 421.575 76.796 421.575 83.898 419.968 87.894 C 418.515 91.508 416.166 93.179 411.667 96.195 C 404.383 101.078 380.91 109.396 376.197 112.798 C 374.349 114.132 375.768 114.021 373.933 115.817 C 368.403 121.227 333.541 147.186 327.898 153.55 C 325.793 155.925 327.341 156.274 325.634 158.078 C 322.519 161.372 309.874 168.431 306.768 170.908 C 305.351 172.036 305.945 171.847 304.504 173.172 C 300.929 176.457 284.689 189.53 281.109 193.548 C 279.47 195.387 279.902 196.223 278.845 197.321 C 277.694 198.517 275.74 198.979 274.317 200.34 C 272.695 201.891 271.609 204.531 269.789 206.377 C 267.87 208.323 264.537 209.965 262.997 211.66 C 261.819 212.956 261.542 214.388 260.733 215.433 C 260.02 216.353 259.704 216.601 258.469 217.697 C 257.866 218.232 256.992 218.901 255.97 219.664 C 256.301 219.951 256.564 220.19 256.959 220.716 C 257.948 222.034 258.856 224.702 259.978 225.999 C 260.905 227.07 261.748 227.411 262.997 228.263 C 264.606 229.36 266.675 229.736 269.034 232.036 C 272.889 235.794 280.727 248.469 283.373 251.657 C 284.549 253.074 284.461 252.454 285.637 253.921 C 288.378 257.343 297.643 272.385 300.73 275.807 C 302.144 277.374 302.39 276.561 303.749 278.071 C 306.539 281.173 314.102 293.831 316.578 296.938 C 317.707 298.354 317.472 297.442 318.842 299.202 C 323.13 304.707 345.496 339.731 349.784 345.237 C 351.154 346.996 351.149 346.352 352.048 347.501 C 353.456 349.3 355.923 354.002 357.331 355.802 C 358.229 356.951 358.409 356.67 359.595 358.066 C 362.236 361.175 371.292 373.824 373.933 376.933 C 375.119 378.329 375.269 378.132 376.197 379.197 C 377.576 380.778 379.785 384.449 381.48 385.989 C 382.776 387.167 383.455 386.142 385.253 388.253 C 390.207 394.066 409.134 425.646 412.422 436.552 C 414.295 442.766 415.038 446.634 412.422 450.136 C 409.169 454.489 396.315 459.306 390.536 458.437 C 385.702 457.711 383.762 454.318 379.216 448.627 C 371.266 438.674 352.576 402.516 348.275 396.554 C 346.948 394.715 347.346 395.99 346.011 394.29 C 342.054 389.254 323.294 359.364 318.842 354.293 C 317.238 352.464 317.547 354.002 315.824 352.029 C 310.386 345.801 283.528 303.165 278.09 296.938 C 276.367 294.965 276.186 295.794 275.071 294.674 C 273.521 293.116 271.167 289.462 269.789 287.882 C 268.861 286.817 268.585 286.937 267.525 285.618 C 265.438 283.023 260.292 273.857 257.714 271.279 C 256.226 269.79 255.685 270.651 253.941 269.015 C 250.288 265.587 239.559 250.552 236.583 247.129 C 235.332 245.69 235.472 246.105 234.319 244.865 C 233.955 244.473 233.495 243.929 232.967 243.283 C 228.126 248.815 217.959 263.387 214.698 266.751 C 213.157 268.34 213.675 266.724 211.679 269.015 C 203.43 278.485 154.214 347.318 136.212 376.178 C 123.122 397.163 116.842 421.462 108.289 428.25 C 103.527 432.03 98.638 430.947 94.705 429.76 C 90.868 428.602 86.582 425.169 84.894 421.458 C 83.094 417.501 83.018 413.373 84.894 406.365 C 88.184 394.078 106.631 357.715 112.062 351.274 C 114.064 348.901 115.15 350.358 116.59 349.01 C 118.469 347.252 120.465 342.508 121.873 340.709 C 122.772 339.56 122.885 340.136 124.137 338.445 C 127.687 333.649 142.772 306.293 146.777 301.466 C 148.286 299.648 148.723 300.61 149.796 299.202 C 151.617 296.81 154.103 289.23 155.833 286.372 C 156.959 284.515 157.379 284.643 158.852 282.599 C 161.671 278.687 169.013 265.507 172.436 262.223 C 174.258 260.474 175.753 261.261 176.964 259.959 C 178.376 258.44 178.452 254.934 179.983 253.167 C 181.488 251.429 183.773 251.473 186.02 249.393 C 189.296 246.361 195.075 237.655 197.34 235.055 C 198.469 233.759 198.839 233.81 199.604 232.791 C 200.593 231.472 201.189 228.988 202.623 227.508 C 204.15 225.932 206.074 226.049 208.66 223.735 C 209.587 222.905 210.764 221.642 212.084 220.128 C 211.428 219.937 210.767 219.708 210.17 219.206 C 208.351 217.678 207.017 214.587 204.887 212.414 C 202.56 210.042 198.676 207.825 196.586 205.622 C 194.875 203.82 194.523 202.142 192.812 200.34 C 190.721 198.137 186.323 195.168 184.511 193.548 C 183.393 192.548 183.577 192.543 182.247 191.284 C 179.295 188.488 169.408 180.091 164.889 175.436 C 161.34 171.779 161.779 170.888 156.588 165.625 C 144.925 153.8 92.369 113.651 84.894 99.968 C 81.493 93.741 83.385 90.092 84.894 86.384 C 86.318 82.887 89.176 79.135 93.196 78.083 Z',\n          'M 348.274 112.127 C 361.204 110.044 371.974 109.732 378.461 112.127 C 382.908 113.769 385.339 116.931 386.763 120.428 C 388.272 124.136 388.153 130.515 386.763 134.012 C 385.552 137.057 384.267 138.954 379.971 140.805 C 371.954 144.257 351.946 142.183 334.69 146.842 C 312.962 152.708 283.803 162.75 259.223 177.029 C 249.347 182.766 238.533 190.206 227.93 198.211 C 234.277 208.421 244.673 224.591 247.903 228.346 C 249.454 230.149 249.421 228.27 250.922 230.61 C 256.402 239.155 279.335 293.916 287.146 319.662 C 293.409 340.306 296.085 357.743 297.712 373.998 C 299.107 387.943 300.292 403.727 297.712 411.731 C 296.034 416.934 292.992 419.644 289.41 421.542 C 285.738 423.487 279.759 424.239 275.826 423.052 C 271.989 421.893 267.711 419.119 266.015 414.75 C 263.777 408.986 268.235 399.421 267.525 389.091 C 266.593 375.544 263.421 357.642 258.469 339.283 C 252.616 317.587 241.728 286.828 232.81 266.835 C 225.508 250.465 219.357 239.059 210.17 226.082 C 208.096 223.153 206.012 220.337 203.871 217.581 C 195.213 224.994 187.468 232.135 181.492 238.157 C 168.741 251.005 162.887 260.51 155.833 272.872 C 148.816 285.17 144.084 297.669 139.231 312.115 C 133.873 328.061 128.161 347.069 125.647 364.942 C 123.135 382.79 127.324 410.222 124.137 419.278 C 122.544 423.805 120.384 424.655 117.345 426.07 C 113.845 427.699 107.694 428.767 103.761 427.58 C 99.924 426.421 96.015 425.018 93.95 419.278 C 89.967 408.205 93.423 370.914 95.46 352.867 C 97.046 338.817 97.924 332.835 103.006 318.152 C 110.503 296.495 136.565 241.17 142.249 232.874 C 143.821 230.581 144.009 231.966 145.268 230.61 C 147.495 228.213 151.253 220.898 154.324 217.781 C 156.805 215.263 160.216 214.219 161.871 212.498 C 163.102 211.218 162.957 210.021 164.135 208.725 C 165.675 207.03 168.62 205.674 170.927 203.442 C 173.635 200.822 176.967 195.623 179.228 193.631 C 179.92 193.022 180.564 192.664 181.161 192.372 C 179.572 190.813 177.924 189.223 176.209 187.594 C 157.663 169.982 112.098 142.283 104.516 129.484 C 100.993 123.537 103.006 119.608 104.516 115.9 C 105.94 112.403 109.096 109.078 112.817 107.599 C 117.092 105.9 125.145 105.9 129.42 107.599 C 133.141 109.078 135.894 114.073 137.721 115.9 C 138.808 116.987 138.189 116.65 139.985 118.164 C 146.136 123.349 188.866 154.618 195.076 160.426 C 197.013 162.238 195.822 161.814 197.34 163.445 C 198.917 165.139 202.891 168.629 207.178 172.428 C 221.58 162.946 252.298 143.693 272.807 134.767 C 297.172 124.163 329.296 115.185 348.274 112.127 Z',\n          'M 102.252 104.58 C 106.248 102.974 113.349 102.974 117.345 104.58 C 120.959 106.033 122.425 108.696 125.647 112.882 C 130.607 119.328 140.268 138.154 143.759 142.314 C 145.198 144.029 144.911 142.027 146.777 144.578 C 151.712 151.325 174.689 195.771 194.673 233.962 C 195.321 232.889 195.97 231.956 196.586 231.365 C 198.069 229.941 199.23 230.78 201.114 229.101 C 204.606 225.989 212.205 213.338 215.452 210.234 C 217.109 208.651 218.052 209.353 219.226 207.97 C 220.907 205.989 221.524 200.911 223.754 198.16 C 226.025 195.357 230.929 193.377 232.81 191.367 C 234.099 189.99 232.694 189.725 235.074 187.594 C 243.393 180.147 302.19 139.327 319.597 133.258 C 328.368 130.2 333.164 131.47 337.709 133.258 C 341.531 134.761 344.587 138.062 346.01 141.559 C 347.52 145.267 347.401 151.646 346.01 155.143 C 344.8 158.188 343.913 158.503 339.218 161.935 C 327.626 170.41 272.422 198.591 259.978 208.725 C 254.214 213.419 253.531 217.164 251.677 219.29 C 250.632 220.488 250.981 219.789 249.413 221.554 C 244.838 226.702 226.159 247.488 211.596 266.045 C 218.209 278.407 223.245 287.47 225.263 290.229 C 227.129 292.78 226.56 290.276 228.282 292.493 C 234.511 300.515 257.802 348.412 275.071 373.998 C 292.066 399.176 324.804 430.261 330.917 444.937 C 333.906 452.113 333.618 456.225 330.917 460.03 C 327.777 464.455 317.174 469.683 310.541 468.332 C 303.042 466.804 298.788 460.565 288.655 447.956 C 267.88 422.101 218.375 344.931 190.548 297.021 C 190.382 296.735 190.216 296.449 190.05 296.162 C 179.203 312.465 168.618 329.975 157.343 349.848 C 138.627 382.836 112.716 451.908 99.233 463.804 C 93.721 468.667 89.582 466.5 85.649 465.313 C 81.812 464.155 77.169 461.568 75.838 457.012 C 73.95 450.549 76.888 440.518 81.876 426.825 C 90.197 403.978 125.182 337.055 131.684 327.963 C 133.367 325.61 133.554 327.139 134.703 325.699 C 136.76 323.119 140.191 313.94 142.249 311.36 C 143.398 309.92 144.195 310.505 145.268 309.096 C 147.089 306.705 149.575 299.124 151.305 296.267 C 152.431 294.409 152.658 294.904 154.324 292.493 C 157.206 288.325 165.973 273.343 172.346 263.142 C 155.324 229.384 140.629 195.438 127.156 173.255 C 114.596 152.577 98.063 138.931 93.95 127.975 C 91.519 121.498 92.344 116.878 93.95 112.882 C 95.403 109.268 98.638 106.033 102.252 104.58 Z',\n          'M 87.158 83.617 C 90.866 82.108 96.695 81.909 100.742 83.617 C 105.064 85.442 106.21 87.64 112.062 94.937 C 125.597 111.813 160.738 170.088 186.02 202.101 C 196.017 214.759 207.108 227.662 218.015 239.751 C 229.068 227.81 238.316 217.958 244.13 211.911 C 255.783 199.792 261.947 196.027 266.015 191.535 C 268.224 189.097 268.677 187.58 269.789 186.252 C 270.626 185.252 270.602 185.326 272.053 183.988 C 275.701 180.627 286.637 173.416 296.202 162.858 C 310.62 146.944 343.051 97.708 349.784 91.164 C 351.598 89.4 351.173 89.979 352.803 89.655 C 355.769 89.063 363.9 88.048 367.896 89.655 C 371.51 91.108 374.773 94.459 376.197 97.956 C 377.707 101.663 379.177 104.674 376.197 111.54 C 369.385 127.239 332.365 169.522 309.032 195.309 C 286.771 219.909 265.017 236.316 239.715 263.064 C 246.285 269.911 252.404 276.102 257.714 281.341 C 270.889 294.339 285.762 305.256 290.165 309.264 C 291.725 310.684 290.471 309.676 292.429 311.528 C 301.049 319.683 378.788 382.708 388.272 399.824 C 392.276 407.051 389.751 411.15 388.272 414.918 C 387.038 418.062 384.519 420.295 381.48 421.71 C 377.98 423.339 375.461 426.603 367.896 423.219 C 346.548 413.67 272.045 343.306 231.3 301.717 C 226.649 296.969 222.013 292.118 217.411 287.196 C 187.732 319.812 151.67 361.149 136.212 381.712 C 125.348 396.165 124.126 407.968 117.345 412.654 C 112.559 415.961 106.489 415.447 102.252 414.163 C 98.286 412.961 94.094 409.45 92.441 405.862 C 90.751 402.193 90.931 397.632 92.441 392.278 C 94.544 384.823 97.27 378.943 107.534 365.11 C 121.245 346.631 161.651 301.297 196.061 263.63 C 170.636 234.734 147.138 205.179 128.665 180.97 C 107.379 153.074 84.327 122 78.857 107.012 C 76.169 99.647 77.25 95.915 78.857 91.919 C 80.31 88.305 83.661 85.041 87.158 83.617 Z',\n        ],\n        circle: [\n          'M 212.434 44.374 C 232.848 42.603 252.511 42.385 274.317 44.374 C 298.074 46.541 324.84 49.019 349.784 57.958 C 376.44 67.511 421.137 95.732 429.024 101.729 C 431.237 103.412 429.851 103.304 431.288 104.748 C 434.225 107.699 442.929 111.51 448.646 119.087 C 456.838 129.945 468.072 149.326 472.795 168.895 C 478.27 191.576 479.963 221.332 475.814 248.89 C 471.314 278.781 449.136 331.35 444.118 341.715 C 442.613 344.823 442.224 343.63 441.099 345.488 C 439.368 348.345 437.234 355.928 435.062 358.317 C 433.623 359.9 432.827 358.547 430.534 360.582 C 424.733 365.727 402.486 395.552 398.083 400.579 C 396.633 402.234 397.252 401.465 395.819 402.843 C 392.169 406.351 378.438 418.618 371.669 425.483 C 365.987 431.246 365.431 436.247 357.331 441.331 C 344.513 449.376 316.616 459.632 293.938 463.971 C 270.003 468.551 242.846 470.27 216.962 466.99 C 190.038 463.578 162.474 455.109 135.457 442.841 C 106.353 429.624 65.25 404.181 48.67 388.504 C 38.363 378.759 36.674 372.396 32.067 362.091 C 26.854 350.429 22.701 340.482 19.993 321.339 C 15.74 291.277 14.709 221.907 16.974 190.026 C 18.503 168.511 20.67 156.436 26.03 141.727 C 31.171 127.618 43.276 108.736 47.915 103.239 C 49.921 100.862 49.803 101.785 52.443 100.22 C 58.178 96.82 73.726 86.377 85.649 82.108 C 97.837 77.744 113.552 79.407 124.892 74.561 C 135.461 70.045 140.034 59.82 152.06 54.94 C 167.371 48.727 192.098 46.139 212.434 44.374 Z M 225.263 74.561 C 213.811 75.231 201.167 76.233 196.586 79.089 C 194.03 80.683 195.376 83.04 193.567 85.127 C 191.071 88.005 187.258 91.676 181.492 94.183 C 173.373 97.713 152.146 97.586 146.777 101.729 C 143.603 104.179 145.7 107.962 143.759 110.785 C 141.501 114.068 137.236 118.592 133.193 119.841 C 129.179 121.082 123.18 120.225 119.609 118.332 C 116.243 116.548 116.709 109.933 112.062 109.276 C 103.957 108.129 78.114 117.418 68.292 127.388 C 58.926 136.894 56.731 153.557 53.198 166.631 C 49.798 179.215 48.091 187.577 47.161 204.365 C 45.78 229.293 44.946 278.683 50.179 307 C 54.432 330.011 57.429 347.714 71.31 364.355 C 87.578 383.857 121.491 400.522 148.287 412.654 C 174.377 424.466 206.061 433.859 229.791 436.803 C 249.196 439.211 263.15 437.718 281.109 433.785 C 301.175 429.389 338.327 414.066 344.501 409.635 C 346.36 408.301 344.868 408.017 346.01 406.616 C 348.353 403.745 358.761 395.903 361.104 393.032 C 362.247 391.632 361.709 391.057 362.613 390.014 C 363.861 388.575 367.402 386.925 368.651 385.486 C 369.555 384.443 369.202 383.598 370.16 382.467 C 371.62 380.744 376.247 378.152 377.707 376.43 C 378.665 375.299 378.311 374.454 379.216 373.411 C 380.464 371.972 382.327 372.211 385.253 368.883 C 392.191 360.993 411.643 335.276 421.478 314.547 C 432.18 291.988 442.587 260.62 445.627 237.57 C 448.195 218.099 446.75 201.257 442.608 184.743 C 438.56 168.603 432.314 152.681 421.478 139.463 C 409.79 125.206 388.542 111.979 373.179 103.239 C 360.065 95.778 349.847 92.456 335.445 88.145 C 318.771 83.155 296.818 78.309 278.09 76.071 C 260.122 73.923 239.816 73.709 225.263 74.561 Z',\n          'M 210.924 79.089 C 228.391 77.02 250.248 76.658 259.223 79.089 C 264.054 80.397 265.764 83.12 267.525 85.127 C 268.851 86.639 267.232 88.252 269.789 89.655 C 276.709 93.453 312.254 91.336 330.162 98.711 C 347.611 105.896 362.912 117.758 376.197 132.671 C 390.739 148.994 404.132 171.744 412.422 194.554 C 421.067 218.343 423.914 249.599 426.006 273.04 C 427.8 293.155 428.775 311.549 426.006 327.376 C 423.588 341.192 418.364 353.828 412.422 363.6 C 407.217 372.158 402.191 377.092 393.555 383.976 C 382.387 392.878 363.371 404.263 348.274 411.144 C 334.19 417.565 323.708 421.823 306.013 424.729 C 282.63 428.568 243.546 430.884 216.962 427.747 C 193.395 424.966 171.97 418.794 153.569 409.635 C 136.332 401.055 121.601 391.677 109.044 375.675 C 94.341 356.938 80.618 326.621 74.329 300.208 C 68.04 273.794 68.66 241.564 71.31 217.194 C 73.604 196.107 78.361 178.573 86.404 161.348 C 94.454 144.107 113.327 120.143 119.609 113.804 C 122.158 111.232 122.374 112.52 124.892 110.785 C 129.452 107.642 135.697 98.882 146.023 94.183 C 160.87 87.425 191.059 81.443 210.924 79.089 Z M 225.263 109.276 C 200.295 110.204 171.793 115.733 152.815 128.897 C 134.321 141.726 120.543 167.841 112.062 186.252 C 104.877 201.853 102.708 215.012 101.497 231.533 C 100.152 249.894 100.595 271.465 106.025 291.906 C 111.939 314.17 125.037 344.816 137.721 359.827 C 147.524 371.428 157.297 375.024 170.927 380.958 C 187.338 388.102 209.771 395.608 231.3 397.56 C 254.343 399.65 281.39 398.115 305.258 391.523 C 329.729 384.765 361.16 371.81 376.197 356.808 C 388.515 344.519 393.459 332.101 395.819 313.037 C 399.028 287.104 391.287 238.219 382.235 210.402 C 374.757 187.423 363.976 169.109 350.538 154.556 C 337.961 140.935 323.848 131.774 305.258 124.369 C 283.419 115.67 251.055 108.318 225.263 109.276 Z',\n          'M 230.546 24.753 C 250.686 24.415 275.194 24.052 295.448 26.262 C 314.245 28.314 330.371 30.952 348.274 36.828 C 367.554 43.154 391.06 53.453 407.139 63.996 C 421.148 73.181 431.747 81.515 441.099 94.937 C 451.658 110.092 461.171 131.965 465.248 152.292 C 469.433 173.155 467.086 198.873 465.248 218.703 C 463.639 236.069 461.216 249.841 456.192 265.493 C 450.884 282.034 443.973 299.051 433.552 315.301 C 422.151 333.081 406.566 352.116 389.027 367.374 C 370.807 383.224 347.041 401.377 325.634 408.126 C 306.239 414.24 290.963 410.945 266.77 409.635 C 234.268 407.876 172.671 403.834 144.513 394.542 C 125.342 388.215 115.611 379.623 104.516 369.638 C 93.923 360.104 86.613 350.042 78.857 336.432 C 69.696 320.356 60.78 297.258 54.707 277.568 C 48.831 258.514 44.592 238.777 42.633 220.213 C 40.775 202.609 40.691 184.935 42.633 168.895 C 44.451 153.873 45.729 140.367 53.198 126.633 C 61.799 110.819 80.973 92.854 94.705 80.599 C 106.606 69.977 121.523 63.553 130.175 55.694 C 136.832 49.647 137.571 42.822 144.513 38.337 C 152.916 32.909 166.117 30.062 179.228 27.772 C 194.3 25.139 212.201 25.061 230.546 24.753 Z M 244.885 54.94 C 236.506 54.921 235.883 57.393 229.791 57.958 C 221.977 58.684 205.077 55.555 201.114 57.958 C 198.962 59.263 202.12 61.687 199.604 63.996 C 193.366 69.721 158.656 78.753 143.759 86.636 C 131.806 92.96 124.507 97.82 115.081 106.257 C 104.343 115.87 90.434 129.248 83.385 142.482 C 76.704 155.025 74.104 169.269 72.82 183.234 C 71.513 197.431 73.266 211.947 75.838 227.005 C 78.583 243.075 83.976 261.155 89.422 276.813 C 94.622 291.762 100.277 306.269 107.534 319.075 C 114.47 331.314 121.769 344.441 131.684 352.28 C 141.078 359.707 148.858 361.988 164.889 365.864 C 190.48 372.052 253.816 378.252 279.599 379.448 C 295.265 380.175 300.319 382.122 312.805 377.939 C 329.414 372.375 353.393 357.639 370.16 341.715 C 387.881 324.884 404.615 301.31 415.44 278.322 C 426.188 255.5 432.903 227.123 435.062 204.365 C 436.967 184.273 435.099 164.723 430.534 148.519 C 426.445 134.007 422.384 122.62 410.912 110.785 C 396.048 95.451 367.897 77.852 341.482 68.524 C 313.068 58.489 262.421 54.979 244.885 54.94 Z',\n          'M 191.303 51.921 C 209.249 50.829 225.411 50.839 247.149 53.43 C 274.429 56.682 316.438 66.063 343.746 73.052 C 366.159 78.787 387.987 83.899 401.101 91.164 C 410.425 96.329 412.681 99.608 419.968 108.521 C 431.186 122.242 454.168 151.617 460.72 171.914 C 466.274 189.115 463.678 202.028 462.23 221.722 C 460.38 246.869 454.934 286.829 447.136 312.283 C 440.555 333.767 430.771 351.988 421.478 366.619 C 413.696 378.87 407.649 386.859 396.573 396.051 C 383.395 406.989 366.715 420.335 345.256 426.238 C 319.047 433.448 280.245 432.799 247.149 429.257 C 212.857 425.587 171.486 414.217 143.004 403.598 C 119.72 394.916 98.801 382.831 85.649 373.411 C 76.427 366.806 72.101 363.039 66.782 354.544 C 60.318 344.219 54.595 331.426 51.689 313.792 C 47.713 289.672 50.898 243.585 51.689 218.703 C 52.269 200.443 52.332 188.791 54.707 174.932 C 56.978 161.686 58.37 150.564 65.273 137.199 C 73.867 120.559 92.868 97.025 106.78 83.617 C 118.299 72.515 128.037 64.765 141.495 59.468 C 155.928 53.786 174.084 52.968 191.303 51.921 Z M 210.17 83.617 C 191.056 87.586 163.125 111.391 148.287 113.804 C 138.952 115.322 134.479 105.643 127.156 109.276 C 115.758 114.931 98.501 143.333 90.932 163.612 C 83.149 184.465 83.376 210.013 81.876 233.042 C 80.394 255.793 78.787 282.251 81.876 300.962 C 84.377 316.118 85.258 327.411 95.46 338.696 C 108.841 353.498 138.761 366.566 164.889 376.43 C 193.508 387.233 232.044 396.162 261.487 399.07 C 287.243 401.613 313.523 400.699 332.426 396.051 C 347.528 392.338 358.644 385.585 368.651 377.939 C 378.005 370.792 384.063 363.455 391.291 352.28 C 400.344 338.282 410.368 319.428 416.95 297.944 C 424.748 272.49 431.632 227.972 432.043 207.383 C 432.297 194.664 431.641 190.438 427.515 180.215 C 422.047 166.668 404.735 143.44 397.328 133.426 C 392.825 127.338 392.412 125.013 386.763 121.351 C 378.613 116.068 365.507 112.477 349.029 107.767 C 325.672 101.09 280.423 90.414 255.45 86.636 C 236.939 83.835 226.348 80.258 210.17 83.617 Z',\n          'M 222.999 47.393 C 233.72 44.189 266.426 46.954 289.41 50.412 C 314.092 54.125 348.079 63.427 366.387 70.033 C 378.85 74.531 383.973 76.732 393.555 83.617 C 405.559 92.244 421.642 107.615 432.043 120.596 C 441.671 132.613 448.432 144.901 454.683 158.33 C 461.063 172.034 466.994 186.897 469.777 202.101 C 472.607 217.566 472.756 230.618 471.286 250.4 C 469.311 276.965 462.517 319.751 454.683 350.016 C 447.539 377.617 437.267 407.798 427.515 425.483 C 420.572 438.074 416.937 445.073 405.629 451.897 C 390.85 460.815 363.232 465.449 340.728 468.499 C 317.505 471.647 296.891 472.326 268.279 470.009 C 231.773 467.053 167.672 455.869 136.967 447.369 C 116.664 441.748 105.549 436.675 93.196 429.257 C 82.075 422.578 73.169 416.999 65.273 405.862 C 55.615 392.241 47.717 366.47 42.633 350.016 C 38.45 336.478 36.377 326.491 35.086 313.792 C 33.724 300.399 34.378 286.038 35.086 271.53 C 35.825 256.392 36.844 238.885 39.614 224.741 C 42.111 211.988 44.931 203.018 50.179 190.026 C 56.629 174.059 66.34 151.663 77.348 135.69 C 87.885 120.397 101.027 107.698 114.326 95.692 C 127.464 83.832 140.248 70.809 156.588 63.996 C 173.73 56.847 205.558 59.279 215.452 54.94 C 220.426 52.758 217.841 48.934 222.999 47.393 Z M 264.506 80.599 C 236.414 79.372 203.065 82.628 179.983 91.164 C 160.107 98.514 144.304 113.359 131.684 124.369 C 121.259 133.465 115.392 139.741 107.534 151.538 C 97.673 166.341 85.83 187.445 78.857 208.893 C 71.252 232.284 65.492 263.992 65.273 287.378 C 65.084 307.557 70.039 325.071 74.329 341.715 C 78.281 357.048 82.398 373.908 89.422 383.976 C 95.144 392.177 101.657 395.492 110.553 400.579 C 121.389 406.776 132.045 411.917 151.305 417.182 C 181.305 425.382 248.765 437.5 282.618 439.822 C 306.795 441.48 321.77 439.709 339.973 436.803 C 357.416 434.019 376.469 435.766 389.781 423.219 C 406.611 407.357 415.989 367.685 424.496 337.187 C 433.349 305.45 441.67 263.32 441.099 236.061 C 440.661 215.165 435.287 201.058 429.024 184.743 C 422.731 168.348 412.687 150.525 403.365 137.954 C 395.377 127.179 387.047 118.909 377.707 112.295 C 368.855 106.026 362.323 103.044 349.029 98.711 C 329.18 92.24 292.764 81.832 264.506 80.599 Z',\n        ]\n      },\n    };\n  },\n  props: ['cell'],\n  computed: {\n    isSetSign() {\n      return !Array.isArray(this.cell)\n    },\n    getRandomPathBySign() {\n      const pathway = this.pathways?.[this.cell];\n      const randomIndex = Math.floor(Math.random() * pathway?.length);\n      return pathway ? pathway[randomIndex] : '';\n    },\n    getStyle() {\n      return {\n        fill: store?.getDefaultColorBySign(this.cell)\n      }\n    }\n  },\n}\n</script>\n\n<style scoped>\n.v-enter-active,\n.v-leave-active {\n  transition: opacity 0.5s ease;\n}\n\n.v-enter-from,\n.v-leave-to {\n  opacity: 0;\n}\n</style>","import { render } from \"./CellSign.vue?vue&type=template&id=44b62c64&scoped=true\"\nimport script from \"./CellSign.vue?vue&type=script&lang=js\"\nexport * from \"./CellSign.vue?vue&type=script&lang=js\"\n\nimport \"./CellSign.vue?vue&type=style&index=0&id=44b62c64&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-44b62c64\"]])\n\nexport default __exports__","import { render } from \"./Cell.vue?vue&type=template&id=660132be&scoped=true\"\nimport script from \"./Cell.vue?vue&type=script&lang=js\"\nexport * from \"./Cell.vue?vue&type=script&lang=js\"\n\nimport \"./Cell.vue?vue&type=style&index=0&id=660132be&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-660132be\"]])\n\nexport default __exports__","<template>\n  <svg\n      class=\"svg_container\"\n      :viewBox=\"getSvgViewBoxBySign\"\n      :width=\"getWidthOrHeight\"\n      :height=\"getWidthOrHeight\"\n  >\n    <path\n        :d=\"getSvgPathBySign\"\n        :style=\"getStyle\"\n    />\n  </svg>\n</template>\n\n<script>\nimport {store} from \"@/stores/store.js\";\n\nexport default {\n  data() {\n    return {\n      currentMultiplier: 56,\n      bigMultiplier: 56,\n      littleMultiplier: 30,\n    }\n  },\n  props: ['sign', 'subFieldIndex'],\n  computed: {\n    winIndexes() {\n      return store.getWinIndexes()\n    },\n    getSvgPathBySign() {\n      return store?.getSvgPathBySign(this.sign)\n    },\n    getSvgViewBoxBySign() {\n      return store?.getSvgViewBoxBySign(this.sign)\n    },\n    getStyle() {\n      return {\n        fill: store?.getDefaultColorBySign(this.sign)\n      }\n    },\n    getWidthOrHeight() {\n      return store.getFieldSize() * this.currentMultiplier\n    },\n  },\n  methods: {\n    changeSizeCurrentMultiplier() {\n      if (!this.winIndexes.includes(this.subFieldIndex.toString())) return\n\n      setInterval(() => {\n        this.currentMultiplier = this.currentMultiplier === this.littleMultiplier ? this.bigMultiplier : this.littleMultiplier\n      }, 1100)\n    },\n  },\n  watch: {\n    'winIndexes'() {\n      this.changeSizeCurrentMultiplier()\n    }\n  },\n  mounted() {\n    this.changeSizeCurrentMultiplier()\n  }\n}\n</script>\n\n<style scoped>\n.svg_container {\n  transition: width 1s ease, height 1s ease;\n}\n\n</style>","import { render } from \"./SubFieldWinSign.vue?vue&type=template&id=2bf6ab14&scoped=true\"\nimport script from \"./SubFieldWinSign.vue?vue&type=script&lang=js\"\nexport * from \"./SubFieldWinSign.vue?vue&type=script&lang=js\"\n\nimport \"./SubFieldWinSign.vue?vue&type=style&index=0&id=2bf6ab14&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2bf6ab14\"]])\n\nexport default __exports__","import { render } from \"./SubField.vue?vue&type=template&id=11c0e09e&scoped=true\"\nimport script from \"./SubField.vue?vue&type=script&lang=js\"\nexport * from \"./SubField.vue?vue&type=script&lang=js\"\n\nimport \"./SubField.vue?vue&type=style&index=0&id=11c0e09e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-11c0e09e\"]])\n\nexport default __exports__","import { render } from \"./MainField.vue?vue&type=template&id=87df0606\"\nimport script from \"./MainField.vue?vue&type=script&lang=js\"\nexport * from \"./MainField.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"game_status\">\n    <div class=\"game_status_text\">\n      {{ getStatusText }}\n    </div>\n    <GameStatusSign v-if=\"!isDraw\"/>\n  </div>\n</template>\n\n<script>\nimport GameStatusSign from \"@/components/GameStatus/GameStatusSign.vue\";\nimport {store} from \"@/stores/store.js\";\n\nexport default {\n  components: {GameStatusSign},\n  computed: {\n    getStatusText() {\n      const values = {\n        null: 'Ход игрока',\n        [store.signEnums.draw.word]: 'Ничья',\n        [store.signEnums.cross.word]: 'Победил',\n        [store.signEnums.circle.word]: 'Победил',\n      }\n      return values[store.getWinner()]\n    },\n    isDraw() {\n      return store.getWinner() === store.signEnums.draw.word\n    },\n  },\n}\n</script>\n\n<style scoped>\n.game_status {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 2rem;\n}\n\n.game_status_text {\n  font-size: 2rem;\n}\n</style>\n","<template>\n  <svg\n      class=\"game_status_sign\"\n      :viewBox=\"getSvgViewBoxBySign\"\n      width=\"60\"\n      height=\"60\"\n  >\n    <path\n        :d=\"getSvgPathBySign\"\n        :style=\"getStyle\"\n    />\n  </svg>\n</template>\n\n<script>\nimport {store} from \"@/stores/store.js\";\n\nexport default {\n  computed: {\n    getSvgViewBoxBySign() {\n      return store.getSvgViewBoxBySign(store.isWinnerExist() ? store.getWinner() : store.getCurrentSign())\n    },\n    getSvgPathBySign() {\n      return store.getSvgPathBySign(store.isWinnerExist() ? store.getWinner() : store.getCurrentSign())\n    },\n    getStyle() {\n      return {\n        fill: store.getDefaultColorBySign(store.isWinnerExist() ? store.getWinner() : store.getCurrentSign())\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.game_status_sign {\n  margin-left: 1rem;\n}\n</style>","import { render } from \"./GameStatusSign.vue?vue&type=template&id=41153e70&scoped=true\"\nimport script from \"./GameStatusSign.vue?vue&type=script&lang=js\"\nexport * from \"./GameStatusSign.vue?vue&type=script&lang=js\"\n\nimport \"./GameStatusSign.vue?vue&type=style&index=0&id=41153e70&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-41153e70\"]])\n\nexport default __exports__","import { render } from \"./GameStatus.vue?vue&type=template&id=662cf029&scoped=true\"\nimport script from \"./GameStatus.vue?vue&type=script&lang=js\"\nexport * from \"./GameStatus.vue?vue&type=script&lang=js\"\n\nimport \"./GameStatus.vue?vue&type=style&index=0&id=662cf029&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-662cf029\"]])\n\nexport default __exports__","import { render } from \"./GameView.vue?vue&type=template&id=3b3ffc3e&scoped=true\"\nimport script from \"./GameView.vue?vue&type=script&lang=js\"\nexport * from \"./GameView.vue?vue&type=script&lang=js\"\n\nimport \"./GameView.vue?vue&type=style&index=0&id=3b3ffc3e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3b3ffc3e\"]])\n\nexport default __exports__","<template>\n  <header class=\"header\">\n    <div class=\"container\">\n      <ul class=\"nav justify-content-end\">\n\n        <li\n            class=\"nav-link link-secondary\"\n            @click=\"restart\"\n        >\n          Рестарт\n        </li>\n\n        <li class=\"dropdown nav-link px-2\">\n          <div\n              class=\"link-secondary drop\"\n              data-bs-toggle=\"dropdown\"\n          >\n            Размерность поля ({{ currentFieldSize }})\n          </div>\n\n          <ul class=\"dropdown-menu dropdown-menu-dark\">\n            <li\n                v-for=\"size in possibleFieldSizes\"\n                class=\"dropdown-item\"\n                @click=\"setFieldSize(size)\"\n            >\n              {{ size + 'x' + size }}\n            </li>\n          </ul>\n        </li>\n\n        <li\n            class=\"nav-link link-secondary link_bot\"\n            @click=\"swapGameDifficulty\"\n            :style=\"getGameDifficultyLiColorStyle\"\n        >\n          {{ getGameDifficultyText }}\n        </li>\n      </ul>\n    </div>\n  </header>\n</template>\n\n<script>\nimport {store} from \"@/stores/store.js\";\n\nexport default {\n  data() {\n    return {\n      currentFieldSize: '3x3',\n      possibleFieldSizes: [2, 3, 4, 5, 6, 7, 8],\n    }\n  },\n  methods: {\n    setFieldSize(val) {\n      store.setFieldSize(val)\n      this.currentFieldSize = (val + 'x' + val)\n    },\n    restart() {\n      store.restart()\n    },\n    swapGameDifficulty() {\n      store.swapBotGame()\n    },\n  },\n  computed: {\n    gameDifficulty() {\n      return store.getBotDifficulty()\n    },\n    getGameDifficultyLiColorStyle() {\n      return {\n        color: store.botDifficultyEnum?.[this.gameDifficulty].style.color + '!important'\n      }\n    },\n    getBotDifficultyText() {\n      return this.gameDifficulty === store.botDifficultyEnum.light.word\n          ? '(легкий)'\n          : this.gameDifficulty === store.botDifficultyEnum.medium.word ? '(средний)' : ''\n    },\n    getGameDifficultyText() {\n      return 'Игра с ' + (!store.isGameWithBot() ? 'человеком' : 'ботом ') + this.getBotDifficultyText\n    },\n  }\n}\n</script>\n\n<style scoped>\n.drop {\n  cursor: pointer;\n\n  &::after {\n    content: \"\\25BC\"\n  }\n}\n\n.header {\n  padding: 1rem;\n  border-bottom: 1px solid gray;\n}\n\nli {\n  cursor: pointer;\n}\n\n.link_bot:hover {\n  transition: opacity 0.3s;\n  opacity: 0.8;\n}\n</style>","import { render } from \"./HeaderView.vue?vue&type=template&id=c413e48e&scoped=true\"\nimport script from \"./HeaderView.vue?vue&type=script&lang=js\"\nexport * from \"./HeaderView.vue?vue&type=script&lang=js\"\n\nimport \"./HeaderView.vue?vue&type=style&index=0&id=c413e48e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c413e48e\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=581db74c&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=581db74c&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-581db74c\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport GameView from \"@/views/GameView.vue\";\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: GameView\n    }\n  ]\n})\n\nexport default router\n","import './assets/main.css'\n\nimport { createApp } from 'vue'\nimport { createPinia } from 'pinia'\n\nimport App from './App.vue'\nimport router from './router'\n\nconst app = createApp(App)\n\napp.use(createPinia())\napp.use(router)\n\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkultimate_tic_tac_toe\"] = self[\"webpackChunkultimate_tic_tac_toe\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(414)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","style","mainFieldStyle","field","cell","index","key","subfieldClasses","subfieldStyle","overlayStyle","sign","subfield","subFieldIndex","mainFieldIndex","isActiveSubField","store","fieldSize","winner","singleField","currentSign","lastMoveIndex","hoveredIndexes","botDifficulty","isBotMotion","botMotionTimeout","signEnums","cross","mainFieldSvg","path","viewVox","backgroundColor","color","word","circle","draw","winEnum","win","nothing","botDifficultyEnum","none","nextDifficulty","light","medium","getCurrentSign","this","getSvgPathBySign","getSvgViewBoxBySign","getDefaultColorBySign","getWinner","getFieldSize","getWinIndexes","getSingleField","Object","keys","filter","isWinIndex","getLastMoveIndex","getHoveredIndexes","getBotDifficulty","getIsBotMotion","getMainFieldInSingleField","values","map","item","getActiveMainFieldIndexes","activeCells","getIndexesByEmptyCondition","includes","mainIndex","subIndex","setWinner","value","setFieldSize","val","restart","setLastMoveIndex","setIsBotMotion","setWinIndexes","obj","setHoveredIndexes","isHovered","fillSingleField","dimension","Math","pow","i","Array","fill","swapCurrentSign","swapBotGame","setSignToSingleField","isMainField","isArray","checkWinInSingleField","moveInField","clearTimeout","isWinnerExist","isGameWithBot","getMaxNumberSignsForWin","min","getRandomArrValueWithExcluding","array","exclude","availableNumbers","num","length","randomIndex","floor","random","isEmpty","getDeepClonedObj","JSON","parse","stringify","checkWinOrDraw","matrix","changedIndex","findSign","isDrawOnly","needSetWinIndexes","isWin","checkWin","isDraw","some","changedIndexY","changedIndexX","checkWinByLine","checkWinByDiagonal","x","y","isHorizontal","startIndex","max","endIndex","stack","matrixIndex","result","checkRowBySign","isDownUpDiagonal","diagonalLen","getDiagonalLen","bottomIndexX","bottomIndexY","bottomMatrixIndex","setCondition","topIndexX","topIndexY","topMatrixIndex","isDownUp","getDownUpDiagonalLen","getUpDownDiagonalLen","sum","count","rowCount","fieldToCheck","drawOnly","winSign","botMotion","randomIndexes","getRandomIndexesInSingleField","getBestBotMove","setTimeout","randomMainIndex","randomSubIndex","activeIndexes","clonedField","isBestBotMoveValid","botWins","opponentWins","activeFieldIndex","randMainIndex","j","randSubIndex","push","cellClasses","setHovered","setSign","viewBox","d","getRandomPathBySign","getStyle","data","pathways","props","computed","isSetSign","pathway","__exports__","components","CellSign","methods","isSigned","isBlocked","isExpandAllCell","isBotMove","isSubHovered","signed","blocked","expand_all_cell","bot_move","sub_hovered","width","getWidthOrHeight","height","currentMultiplier","bigMultiplier","littleMultiplier","winIndexes","changeSizeCurrentMultiplier","toString","setInterval","watch","mounted","Cell","SubFieldWinSign","getBorderColor","subfield_nonactive","subfield_active","display","padding","gridTemplateColumns","borderTop","borderRight","SubField","getStatusText","GameStatusSign","null","MainField","GameStatus","currentFieldSize","possibleFieldSizes","size","swapGameDifficulty","getGameDifficultyLiColorStyle","getGameDifficultyText","gameDifficulty","getBotDifficultyText","HeaderView","GameView","render","router","history","routes","name","component","app","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}